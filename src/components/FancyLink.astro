---
import Link from './Link'

interface Props extends astroHTML.JSX.AnchorHTMLAttributes {
  variant?: 'default' | 'compact'
}

const props = Astro.props as Props
const { class: className, variant = 'default', ...rest } = props
---

<Link class={className} {...rest}>
  <div class:list={[
    'animated-button',
    variant === 'compact' && 'compact',
  ]}>
    <svg
      aria-hidden='true'
      viewBox='0 0 24 24'
      class='arr-2 size-4'
      xmlns='http://www.w3.org/2000/svg'
    >
      <path
        d='M16.1716 10.9999L10.8076 5.63589L12.2218 4.22168L20 11.9999L12.2218 19.778L10.8076 18.3638L16.1716 12.9999H4V10.9999H16.1716Z'
      ></path>
    </svg>
    <span class='text'><slot /></span>
    <span class='circle'></span>
    <svg
      aria-hidden='true'
      viewBox='0 0 24 24'
      class='arr-1 size-4'
      xmlns='http://www.w3.org/2000/svg'
    >
      <path
        d='M16.1716 10.9999L10.8076 5.63589L12.2218 4.22168L20 11.9999L12.2218 19.778L10.8076 18.3638L16.1716 12.9999H4V10.9999H16.1716Z'
      ></path>
    </svg>
  </div>
</Link>

<style>
  a {
    --color: ghostwhite;
    display: inline-block;
    flex-shrink: 0; /* don't let flex containers squeeze this link */
  }

  .animated-button {
    position: relative;
    display: flex;
    align-items: center;
    gap: 4px;
  padding: 12px 32px;
  /* Thicker border for the pill shape; visual outline via box-shadow */
  border: 4px solid transparent;
    font-size: 0.875rem;
    background-color: inherit;
    border-radius: 100px;
    font-weight: 500;
    color: var(--color);
    /* Bring back the default thin outline look */
    box-shadow: 0 0 0 1px var(--color);
    cursor: pointer;
    overflow: hidden;
    white-space: nowrap; /* keep text on one line */
    line-height: 1; /* tighter vertical rhythm */
    transition: all 0.6s cubic-bezier(0.23, 1, 0.32, 1);
  }

  /* Compact variant for extra-slim pills */
  .animated-button.compact {
    padding: 6px 16px;
    font-size: clamp(0.8125rem, 0.76rem + 0.2vw, 0.875rem);
    border-width: 1px; /* shape only; visual border comes from box-shadow */
  }
  .animated-button.compact svg {
    width: 14px;
  }
  .animated-button.compact .text {
    transform: translateX(-10px);
  }

  /* Responsive padding tweaks for compact variant */
  @media (max-width: 640px) {
    .animated-button.compact { padding: 6px 14px; }
  }
  @media (min-width: 1024px) {
    .animated-button.compact { padding: 8px 18px; }
  }

  .animated-button svg {
    position: absolute;
  width: 24px;
    fill: var(--color);
    z-index: 9;
    transition: all 0.8s cubic-bezier(0.23, 1, 0.32, 1);
  }

  .animated-button .arr-1 {
    right: 16px;
  }

  .animated-button .arr-2 {
    left: -25%;
  }

  .animated-button .circle {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 20px;
    height: 20px;
    background-color: var(--color);
    border-radius: 50%;
    opacity: 0;
    transition: all 0.8s cubic-bezier(0.23, 1, 0.32, 1);
  }

  .animated-button .text {
    position: relative;
    z-index: 1;
    transform: translateX(-12px);
    line-height: 1; /* match container line-height */
    transition: all 0.8s cubic-bezier(0.23, 1, 0.32, 1);
  }

  .animated-button:hover {
    /* Restore subtle ring expansion on hover like the default */
    box-shadow: 0 0 0 8px transparent;
    color: #212121;
    border-radius: 12px;
  }

  .animated-button:hover .arr-1 {
    right: -25%;
  }

  .animated-button:hover .arr-2 {
    left: 16px;
  }

  .animated-button:hover .text {
    transform: translateX(12px);
  }

  .animated-button:hover svg {
    fill: #212121;
  }

  .animated-button:active {
    scale: 0.95;
    box-shadow: 0 0 0 4px var(--color);
  }

  .animated-button:hover .circle {
    width: 220px;
    height: 220px;
    opacity: 1;
  }
</style>
