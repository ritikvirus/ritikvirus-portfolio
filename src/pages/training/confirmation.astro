---
import BaseLayout from '@/layouts/BaseLayout.astro'
import SEO from '@/components/SEO.astro'

const { searchParams } = Astro.url
const txnId = searchParams.get('txnId')
const status = searchParams.get('status') || 'pending'
const data = searchParams.get('data')

// Parse booking data if available
let bookingData = null
if (data) {
  try {
    bookingData = JSON.parse(Buffer.from(data, 'base64').toString())
  } catch (error) {
    console.error('Error parsing booking data:', error)
  }
}

const isSuccess = status === 'success'
const isFailed = status === 'failed'
---

<BaseLayout>
  <SEO 
    title={`Training Booking ${isSuccess ? 'Confirmed' : isFailed ? 'Failed' : 'Pending'} | AI DevOps`} 
    description={`Your DevOps training session booking is ${isSuccess ? 'confirmed' : isFailed ? 'failed' : 'pending'}. ${isSuccess ? 'We will contact you within 24 hours.' : ''}`}
    slot="seo"
  />
  
  <div class="min-h-screen flex items-center justify-center py-16">
    <div class="max-w-2xl mx-auto px-4">
      <div class="text-center space-y-8">
        
        <!-- Status Icon -->
        {isSuccess && (
          <div class="mx-auto w-24 h-24 bg-emerald-500/20 rounded-full flex items-center justify-center">
            <svg class="w-12 h-12 text-emerald-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
            </svg>
          </div>
        )}
        
        {isFailed && (
          <div class="mx-auto w-24 h-24 bg-red-500/20 rounded-full flex items-center justify-center">
            <svg class="w-12 h-12 text-red-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
            </svg>
          </div>
        )}
        
        {!isSuccess && !isFailed && (
          <div class="mx-auto w-24 h-24 bg-yellow-500/20 rounded-full flex items-center justify-center">
            <svg class="w-12 h-12 text-yellow-400 animate-spin" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z"></path>
            </svg>
          </div>
        )}

        <!-- Status Message -->
        <div class="space-y-4">
          <h1 class="text-4xl font-bold text-zinc-100">
            {isSuccess ? 'Booking Confirmed!' : isFailed ? 'Payment Failed' : 'Processing Payment...'}
          </h1>
          
          <p class="text-xl text-zinc-400">
            {isSuccess 
              ? 'Your DevOps training session has been successfully booked.'
              : isFailed 
                ? 'We encountered an issue processing your payment.'
                : 'Please wait while we process your payment...'
            }
          </p>
        </div>

        <!-- Booking Details (if available) -->
        {bookingData && isSuccess && (
          <div class="bg-zinc-800/50 border border-zinc-700 rounded-lg p-6 text-left">
            <h3 class="text-lg font-semibold text-zinc-100 mb-4">Booking Details</h3>
            <div class="space-y-2 text-sm">
              <div class="flex justify-between">
                <span class="text-zinc-400">Transaction ID:</span>
                <span class="text-zinc-200 font-mono">{txnId}</span>
              </div>
              <div class="flex justify-between">
                <span class="text-zinc-400">Name:</span>
                <span class="text-zinc-200">{bookingData.name}</span>
              </div>
              <div class="flex justify-between">
                <span class="text-zinc-400">Email:</span>
                <span class="text-zinc-200">{bookingData.email}</span>
              </div>
              <div class="flex justify-between">
                <span class="text-zinc-400">Duration:</span>
                <span class="text-zinc-200">{bookingData.hours} hour{bookingData.hours !== 1 ? 's' : ''} {bookingData.minutes > 0 && `${bookingData.minutes} minutes`}</span>
              </div>
              <div class="flex justify-between">
                <span class="text-zinc-400">Amount:</span>
                <span class="text-emerald-400 font-semibold">₹{bookingData.totalAmount}</span>
              </div>
            </div>
          </div>
        )}

        <!-- Instructions -->
        {isSuccess && (
          <div class="bg-emerald-500/10 border border-emerald-500/20 rounded-lg p-6">
            <h3 class="text-lg font-semibold text-emerald-300 mb-2">What's Next?</h3>
            <ul class="text-left text-zinc-300 space-y-2">
              <li class="flex items-start space-x-2">
                <span class="text-emerald-400 mt-1">✓</span>
                <span>We'll contact you within 24 hours at <strong>{bookingData?.email || 'your email'}</strong></span>
              </li>
              <li class="flex items-start space-x-2">
                <span class="text-emerald-400 mt-1">✓</span>
                <span>We'll discuss your learning goals and schedule the training session</span>
              </li>
              <li class="flex items-start space-x-2">
                <span class="text-emerald-400 mt-1">✓</span>
                <span>You'll receive a calendar invite and preparation materials</span>
              </li>
            </ul>
          </div>
        )}

        {isFailed && (
          <div class="bg-red-500/10 border border-red-500/20 rounded-lg p-6">
            <h3 class="text-lg font-semibold text-red-300 mb-2">Don't Worry!</h3>
            <p class="text-zinc-300 mb-4">
              Payment issues can happen due to various reasons. Your booking details are safe.
            </p>
            <div class="space-y-2">
              <p class="text-zinc-300">You can:</p>
              <ul class="text-left text-zinc-300 space-y-1 ml-4">
                <li>• Try booking again with a different payment method</li>
                <li>• Contact us directly for assistance</li>
                <li>• Check your bank/card statement for any charges</li>
              </ul>
            </div>
          </div>
        )}

        <!-- Action Buttons -->
        <div class="flex flex-col sm:flex-row gap-4 justify-center">
          {isSuccess && (
            <>
              <a href="/training" class="inline-flex items-center justify-center px-8 py-3 border border-zinc-700 hover:border-zinc-600 text-zinc-300 font-semibold rounded-lg transition-colors">
                Book Another Session
              </a>
              <a href="/" class="inline-flex items-center justify-center px-8 py-3 bg-emerald-500 hover:bg-emerald-600 text-white font-semibold rounded-lg transition-colors">
                Back to Home
              </a>
            </>
          )}
          
          {isFailed && (
            <>
              <a href="/training" class="inline-flex items-center justify-center px-8 py-3 bg-emerald-500 hover:bg-emerald-600 text-white font-semibold rounded-lg transition-colors">
                Try Again
              </a>
              <a href="/" class="inline-flex items-center justify-center px-8 py-3 border border-zinc-700 hover:border-zinc-600 text-zinc-300 font-semibold rounded-lg transition-colors">
                Back to Home
              </a>
            </>
          )}
          
          {!isSuccess && !isFailed && (
            <a href="/training" class="inline-flex items-center justify-center px-8 py-3 border border-zinc-700 hover:border-zinc-600 text-zinc-300 font-semibold rounded-lg transition-colors">
              Back to Training
            </a>
          )}
        </div>

        <!-- Contact Info -->
        <div class="text-center text-sm text-zinc-500">
          <p>Need help? Contact us at <a href="mailto:ritikvirus6@gmail.com" class="text-emerald-400 hover:text-emerald-300">ritikvirus6@gmail.com</a></p>
        </div>
      </div>
    </div>
  </div>
</BaseLayout>

<script>
  // Auto-refresh for pending payments
  if (window.location.search.includes('status=pending')) {
    setTimeout(() => {
      window.location.reload()
    }, 5000)
  }
</script>